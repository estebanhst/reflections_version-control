What happens when you initialize a repository? Why do you need to do it?
It creates the hidden directory .git that stores the changes of the commits. When I
initialize it, it doesn't have any commits yet, so I can decide which files to commit
and which message put to the commit.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area is different because it allows me to decide which files record together or if I do not want to commit an special file

How can you use the staging area to make sure you have one commit per logical
change?
I make sure of that because I compare my changes at that moment with the last commit, so I can know if it implies a logical change

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
The branches would help because it's  kind of a category, it allows us to order the aspects of our project and make the logical changes more logical inside another "box"

How do the diagrams help you visualize the branch structure?
Diagrams are helpful too see how our project is divided into pieces, and help us to move between then easily

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
